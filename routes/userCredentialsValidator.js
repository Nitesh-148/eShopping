var express = require('express');

var router = express.Router(); //Router is predefined method.
const {MongoClient} = require('mongodb'); // mongodb is a node module through which  we could able to create a reference called as MongoClient.
const url = 'mongodb://127.0.0.1:27017'; //
const mongoClient = new MongoClient(url);
var bcrypt = require("bcrypt");

/*
router.get('/', (req, res) => {
    console.log(req.query) // request or req is a fre-defined object which have extra in formation of request been generated by client signedCookie.
    // query is a predefined method, under that what ever data user has pass we could able to see that.

    var responseData = {};

    if(req.query.accountId == 'admin' && req.query.accountPassword == 'admin@123'){
           responseData.msg = 'Success';
    }
    else{
        responseData.msg = 'Invalid Credentials';
    }

    res.end(JSON.stringify(responseData));

});
*/ 

async function getDbConnection(inputData) {
    await mongoClient.connect(); // using await because it can go to database until it it can get the connction to database otherwise it will through an error .
    var db = mongoClient.db("fashionClub"); // fashioClub is database name.
    var collection = db.collection('userLoginDetails');
    var results = collection.find({accountId: inputData.accountId}).toArray();
    return results;
}


    router.post('/', async (req, res) => {
    console.log(req.body) // request or req is a fre-defined object which have extra in formation of request been generated by client signedCookie.In case of post communication insted of req.query use req.body.
    var responseData = {};
    try{
        const results = await getDbConnection(req.body);
    // getDbConnection(req.body).then((results) => {
        console.log(results);
        
         if(results.length){
            bcrypt.compare(req.body.accountpwd,results[0].accountpwd, function(err, result) {
                if(result) {
                    responseData.msg = 'Valid';
                    req.session.isUserLoggedIn = true;
                    if(results[0].isAdmin)
                    {
                        responseData.isAdmin = true;
                    }
                 } else {
                    responseData.msg = 'Invalid';
                    req.session.isUserLoggedIn = false;
                }
                res.send(JSON.stringify(responseData));
            });
        } 
        else{
            responseData.msg = 'Invalid';
            responseData.msg = 'Invalid Credentials';
            req.session.isUserLoggedIn = false
            res.send(JSON.stringify(responseData));
        }

    } catch(error) {
        console.log(error);  
        console.log('error while connecting');
        req.session.isUserLoggedIn = false;
        res.send(JSON.stringify(responseData));
    }

   /* if(req.body.accountId == 'Shashank' && req.body.accountPassword == 'Shashank@002')
    {
        responseData.msg = 'Valid';
    }
    else{
        responseData.msg = 'Invalid Credentials';
    }

    res.end(JSON.stringify(responseData)); */

 });

module.exports = router; 